<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ecjtu.order.dao.UserDao">
    <resultMap id="BaseResultMap" type="com.ecjtu.order.bean.User">
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="user_pwd" jdbcType="VARCHAR" property="userPwd"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="pic" jdbcType="VARCHAR" property="pic"/>
    </resultMap>

    <!--分页-->
    <sql id="limit_body">
        <if test="offset!= null and pageSize != null">
            LIMIT #{offset},#{pageSize}
        </if>
    </sql>

    <!-- 根据用户id删除用户-->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from user
        where user_id = #{userId,jdbcType=INTEGER}
    </delete>

    <!--插入用户信息 -->
    <insert id="insert" parameterType="com.ecjtu.order.bean.User">
        insert into user (user_name, user_pwd,
        email, phone, sex, pic)
        values (#{userName,jdbcType=VARCHAR}, #{userPwd,jdbcType=VARCHAR},
          #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR},#{pic,jdbcType=VARCHAR})
    </insert>

    <!--完善用户信息-->
    <update id="updateByPrimaryKey" parameterType="com.ecjtu.order.bean.User">
        update user
        set email = #{email,jdbcType=VARCHAR},
          phone = #{phone,jdbcType=VARCHAR},
          sex = #{sex,jdbcType=VARCHAR}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>

    <!--修改用户头像-->
    <update id="updatePic" parameterType="com.ecjtu.order.bean.User">
        update user
        set pic = #{pic,jdbcType=VARCHAR}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>

    <!--修改用户信息-->
    <update id="updateUsers" parameterType="com.ecjtu.order.bean.User">
        update user
        set user_name=#{userName,jdbcType=VARCHAR},
            user_pwd=#{userPwd,jdbcType=VARCHAR},
            email = #{email,jdbcType=VARCHAR},
            phone = #{phone,jdbcType=VARCHAR},
            sex = #{sex,jdbcType=VARCHAR}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>

    <!--修改密码-->
    <update id="updatePwd" parameterType="com.ecjtu.order.bean.User">
        update user
        set user_pwd=#{userPwd,jdbcType=VARCHAR}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>

    <!--根据用户id查询用户信息-->
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select user_id, user_name, user_pwd, email, phone, sex, pic
        from user
        where user_id = #{userId,jdbcType=INTEGER}
    </select>

    <!--查询全部用户信息-->
    <select id="selectAll" resultMap="BaseResultMap">
        select user_id, user_name, user_pwd, email, phone, sex ,pic
        from user
        <include refid="limit_body"/>
    </select>

    <!--根据用户名和密码查询用户信息-->
    <select id="selectUsername" resultMap="BaseResultMap">
        select * from user where user_name=#{userName} and user_pwd = #{userPwd}
    </select>

    <!--更新用户信息-->
    <update id="updateUserinfo" parameterType="com.ecjtu.order.bean.User">
        update user
        set user_name=#{userName,jdbcType=VARCHAR},
            user_pwd=#{userPwd,jdbcType=VARCHAR},
            email = #{email,jdbcType=VARCHAR},
            phone = #{phone,jdbcType=VARCHAR},
            sex = #{sex,jdbcType=VARCHAR},
            pic=#{pic,jdbcType=VARCHAR}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>

    <!-- 根据条件查询用户信息 -->
    <!-- 查询条件 -->
    <sql id="query_sql_condition">
        <if test="userName != null and userName != ''">
            AND user_name like CONCAT('%',#{userName},'%')
        </if>
        <if test="email != null and email != ''">
            AND email like CONCAT('%',#{email},'%')
        </if>
        <if test="phone != null and phone != ''">
            AND phone like CONCAT('%',#{phone},'%')
        </if>
        <if test="sex != null and sex != ''">
            AND sex like CONCAT('%',#{sex},'%')
        </if>
    </sql>

    <!--根据条件查找用户信息-->
    <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select user_id, user_name, user_pwd, email, phone, sex, pic
        from user
        <where>
            <include refid="query_sql_condition"/>
        </where>
    </select>


    <!-- 查询总数 -->
    <select id="queryTotal" resultType="int">
        select count(1) from user
        <where>
            <include refid="query_sql_condition"/>
        </where>
    </select>
</mapper>